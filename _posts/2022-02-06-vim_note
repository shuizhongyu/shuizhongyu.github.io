- ^:代表非空行首，可以直接到代码行有效行首
- Ctrl-e，Ctrl-y可以不移动光标整屏上下移动
- 屏幕行和实际行，jk在实际行中移动，实际行如果太长，在屏幕上就会占用好几行，这时用gj，gk就可以在屏幕显示的屏幕行中移动
- w下个单词词首，b上个单词词首，e上个单词词尾
- W下个词串词首，B上个词串词首，E上个词串词尾
- N%跳转到大约N%的文档位置
- H，M，L跳转到视野内的高中低位置
- shift + insert 粘贴系统剪切板或者缓冲区
- reg查看寄存器列表存储值
- 双引号加寄存器号+p 粘贴相应的寄存器中的值

1.无名（unnamed）寄存器：""，缓存最后一次操作内容；
 2.数字（numbered）寄存器："0 ～ "9，缓存最近操作内容，复制与删除有别, "0寄存器缓存最近一次复制的内容，"1-"9缓存最近9次删除内容
 3.行内删除（small delete）寄存器："-，缓存行内删除内容；
 4.具名（named）寄存器："a ～ "z或"A - "0Z，指定时可用；
 5.只读（read-only）寄存器：":, "., "%, "#，分别缓存最近命令、最近插入文本、当前文件名、当前交替文件名；
 6.表达式（expression）寄存器："=，只读，用于执行表达式命令；
 7.选择及拖拽（selection and drop）寄存器："*, "+, "~，存取GUI选择文本，可用于与外部应用交互，使用前提为系统剪切板（clipboard）可用；
 8.黑洞（black hole）寄存器："_，不缓存操作内容（干净删除）；
 9.模式寄存器（last search pattern）："/，缓存最近的搜索模式。

- vim sneak插件for idea，F，f行内查找，；下一处，，上一处
  - s后输入两个字符来查找，更快速准确
- 正常vim s，S命令：s:删除光标所在的字符并开始插入  S:删除光标所在行并开始插入
- 宏的录制和修改：宏录制也是录制到寄存器中去的，常用qq来录制到寄存器q中，@q调用。如果录制了一个较长的命令错误一点，想要修改，可以在文件中新起一行，直接"qp粘贴，然后编辑好后，"qy$复制这一行到寄存器中去，然后@q就可以了，寄存器无敌。


